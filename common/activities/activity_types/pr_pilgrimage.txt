#Based on vanilla pilgrimage and work done by cybrxkhan

pr_activity_kogaionon_pilgrimage= {
	is_shown = {
		highest_held_title_tier > tier_barony
		is_landed = yes
		religion = religion:daco_thracian_religion
		OR = {
			title:c_hunyad = {
				squared_distance = {
					target = root.capital_province
					value <= squared_distance_small
				}
			}
			AND = {
				capital_province = {
					OR = {
						geographical_region = world_europe_east
						geographical_region = world_europe_south_east
						
					}
				}			
			}
		}
		trigger_if = {
			limit = {
				is_ai = yes
			}
			is_at_war = no
			short_term_gold >= PR_activity_cost
		}	
	}

	can_start = {
		religion = religion:daco_thracian_religion
		OR = {
			custom_description = {
				text = Pr_Kogaionon_close_req
				title:c_hunyad = {
					squared_distance = {
						target = root.capital_province
						value <= squared_distance_small
					}
				}
			}

			custom_description = {
				text = Pr_Kogaionon_long_distance_req
				# is_target_in_global_variable_list = {
				# 	name = unavailable_unique_decisions
				# 	target = flag:RICE_aachen_charlemagne_remains_transferred
				# }
				capital_province = {
					OR = {
						geographical_region = world_europe_east
						geographical_region = world_europe_south_east
					}
				}
			}
		}
	}

	can_start_showing_failures_only = {
		is_available_adult = yes
	}

	is_valid = {
		NOT = {
			has_variable = activity_invalidated
		}
		scope:host = {
			is_landed = yes
			NOT = { is_incapable = yes }
		}
		scope:activity = {
			OR = {
				NOT = { has_variable = starting_faith }
				# We could check whether the place you're going to is still a holy site in the new faith, but then that messes up all the people moving with you, so we just cancel the whole thing.
				scope:host.faith = var:starting_faith
			}
		}
	}

	on_invalidated = {
		# Host becomes unlanded
		if = {
			limit = {
				scope:host = { is_landed = no }
			}
			scope:activity = {
				activity_type = { save_scope_as = activity_type }
			}
			every_attending_character = {
				trigger_event = activity_system.0320
			}
		}
		if = {
			limit = {
				scope:host = { is_incapable = yes }
			}
			scope:activity = {
				activity_type = { save_scope_as = activity_type }
			}
			scope:host = {
				trigger_event = activity_system.0330
			}
			every_attending_character = {
				limit = { NOT = { this = scope:host } }
				trigger_event = activity_system.0331
			}
		}
		if = {
			limit = {
				NOT = { scope:host.faith = var:starting_faith }
			}
			scope:activity = {
				activity_type = { save_scope_as = activity_type }
				activity_location = { save_scope_as = location }
			}
			every_attending_character = {
				trigger_event = RICEmisc.0010
			}
		}
	}

	on_host_death = {
		scope:activity = {
			set_variable = {
				name = activity_invalidated
			}
		}
	}

	province_filter = all
	ai_province_filter = realm
	wait_time_before_start = { days = 14 }

	###################
	# OPTIONS
	###################

	special_option_category = special_type

	options = {
		#########
		# TYPE OF VISIT
		#########
		special_type = {
			pr_pilgrimage_type_religious = {
				default = yes	
				ai_will_do = {
					value = 10
					if = {
						limit = {
							has_trait = zealous
						}
						add = 5
					}
					if = {
						limit = {
							has_trait = diligent
						}
						add = 5
					}
				}
			}
			# pr_pilgrimage_type_recreation = {		
			# 	ai_will_do = {
			# 		value = 10
			# 		if = {
			# 			limit = {
			# 				has_trait = ambitious
			# 			}
			# 			add = 5
			# 		}
			# 		if = {
			# 			limit = {
			# 				has_trait = humble
			# 			}
			# 			add = 5
			# 		}
			# 	}
			# }
		}

	}

	###################
	# PHASES
	###################

	phases = {
		
		pr_local_kogaionon_pilgrimage_phase = {
			is_predefined = yes
			
			on_phase_active = {
				if = {
					limit = {
						this = scope:host
					}
					scope:host = { trigger_event = dacian.004 }
				}		
			}
			on_end = {
			}
		}
	}

	max_guest_arrival_delay_time = { months = 1 }

	# desc is only shown in debug AI watch window
	ai_will_do = {
		value = 50
		
		if = {
			limit = {
				has_trait = cynical
			}
			add = -25
		}
		if = {
			limit = {
				has_trait = zealous
			}
			add = 25
		}
		
		#Can you actually afford this?
		if = {
			limit = {
				NOT = { can_make_expensive_purchase_trigger = { PRICE = PR_activity_cost } }
			}
			add = -50
		}
	}

	ai_check_interval = 60

	ai_will_select_province = {
		value = 10
	}
	
	is_location_valid = {
		trigger_if = {
			limit = {
				exists = barony
			}
			barony = title:b_vajdahunyad
		}
	}

	max_province_icons = 1

	province_score = {
		add = 0
		# Actual location
		if = {
			limit = {
				county ?= title:c_hunyad
			}
			add = 100
		}
	}
	
	cost = {
		gold = {
			add = {
				value = 0
				add = {
					value = PR_activity_cost
					desc = hunt_base_cost
				}
			}
		}
	}

	ui_predicted_cost = {
		gold = {
			value = PR_activity_cost

			# Make it a multiple of 5 (rounded up)
			divide = 5 
			ceiling = yes 
			multiply = 5
		}
	}
	cooldown = { days = 3650 }
	
	###################
	# ACTIVITY-SPECIFIC PULSES
	###################
	
	pulse_actions = {

	}

	# on_start = {
	# }

	on_enter_passive_state = {
		
	}

	###################
	# GUEST HANDLING
	###################

	max_guests = 10

	guest_invite_rules = {
		rules = {
			# Relations.
			2 = activity_invite_rule_lovers
			2 = activity_invite_rule_rivals_if_appropriate

			# Family.
			3 = activity_invite_rule_extended_family

			# Misc landless.
			5 = activity_invite_rule_knights

			# MP 
			6 = activity_invite_mp
		}
		defaults = {
			1 = activity_invite_rule_friends
			1 = activity_invite_rule_close_family
			3 = activity_invite_rule_courtiers
			4 = activity_invite_rule_guests
			1 = activity_invite_spouses
		}
	}

	can_be_activity_guest = {
		faith.religion = scope:host.faith.religion
		is_adult = yes
		is_available = yes
		in_diplomatic_range = scope:host
		is_landed = no
	}

	host_intents = {
		
		intents = { pr_local_pilgrimage_worship_intent pr_local_pilgrimage_curiosity_intent }
		default = pr_local_pilgrimage_worship_intent
	}

	guest_intents = {
		intents = { pr_local_pilgrimage_worship_intent pr_local_pilgrimage_curiosity_intent }
		default = pr_local_pilgrimage_worship_intent
	}

	guest_join_chance = {
		base = 10
		base_activity_modifier = yes

		# Scripted Modifiers
		activity_guest_shared_ai_accept_modifier = yes
	}
	
	on_complete = {
		if = {
			limit = { this = scope:host }
			create_character_memory = {
				type = pr_kogaionon_pilgrimage_host_memory
			}
		}
		else = {			
			create_character_memory = {
				type = pr_kogaionon_pilgrimage_guest_memory
				participants = {
					host = scope:host
				}
			}
		}
	}

	#################
	#
	# TRAVEL
	#
	#################

	# Travel
	background = {
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_mountains.dds"
		environment = "environment_travel_mountain_settlement"
		ambience = "event:/SFX/Events/Backgrounds/mountains_day"
	}
	

	#################
	#
	# ARRIVED
	#
	#################

	#Fallback
	background = {
		texture = "gfx/interface/illustrations/event_scenes/mountains.dds"
		environment = "environment_event_mountains"
		ambience = "event:/SFX/Events/Backgrounds/mountains_day"
	}


	window_characters = {

		guest = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				triggered_animation = {
					trigger = {
						scope:character = {
							has_trait = zealous
						}
					}
					animation = { personality_zealous personality_honorable }
				}
				triggered_animation = {
					trigger = {
						scope:character = {
							OR = {
								has_trait = cynical
								has_trait = lazy
							}
						}
					}
					animation = { boredom eyeroll }
				}
				animation = personality_content
			}
		}

		guest = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				triggered_animation = {
					trigger = {
						scope:character = {
							has_trait = zealous
						}
					}
					animation = { personality_zealous personality_honorable }
				}
				triggered_animation = {
					trigger = {
						scope:character = {
							OR = {
								has_trait = cynical
								has_trait = lazy
							}
						}
					}
					animation = { boredom eyeroll }
				}
				animation = personality_compassionate
			}
		}
		
		host = {
			camera = camera_body
			
			effect = {
				if = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					scope:host = {
						add_to_list = characters
					}
				}
			}

			scripted_animation = {
				triggered_animation = {
					trigger = {
						scope:character = {
							OR = {
								has_trait = cynical
								has_trait = lazy
							}
						}
					}
					animation = { boredom eyeroll }
				}
				animation = personality_zealous
			}
		}
		
		travel_host = {
			camera = camera_body
			
			effect = {
				if = {
					limit = {
						NOT = {
							scope:host.location = scope:activity.activity_location
						}
					}
					scope:host = {
						add_to_list = characters
					}
				}
			}

			scripted_animation = {
				animation = jockey_walk
			}
		}

		guest = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				animation = jockey_walk
			}
		}

		guest = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				animation = jockey_walk
			}
		}
	}
}

pr_activity_cnoc_uisnigh_pilgrimage= {
	is_shown = {
		highest_held_title_tier > tier_barony
		is_landed = yes
		religion = religion:celtic_religion
		OR = {
			title:c_athlone = {
				squared_distance = {
					target = root.capital_province
					value <= squared_distance_small
				}
			}
			AND = {
				capital_province = {
					geographical_region = world_europe_west_britannia
				}			
			}
		}
		trigger_if = {
			limit = {
				is_ai = yes
			}
			is_at_war = no
			short_term_gold >= PR_activity_cost
		}	
	}

	can_start = {
		religion = religion:celtic_religion
		OR = {
			custom_description = {
				text = Pr_cnoc_uisnigh_close_req
				title:c_athlone = {
					squared_distance = {
						target = root.capital_province
						value <= squared_distance_small
					}
				}
			}

			custom_description = {
				text = Pr_cnoc_uisnigh_long_distance_req
				# is_target_in_global_variable_list = {
				# 	name = unavailable_unique_decisions
				# 	target = flag:RICE_aachen_charlemagne_remains_transferred
				# }
				capital_province = {
					geographical_region = world_europe_west_britannia
				}
			}
		}
	}

	can_start_showing_failures_only = {
		is_available_adult = yes
	}

	is_valid = {
		NOT = {
			has_variable = activity_invalidated
		}
		scope:host = {
			is_landed = yes
			NOT = { is_incapable = yes }
		}
		scope:activity = {
			OR = {
				NOT = { has_variable = starting_faith }
				# We could check whether the place you're going to is still a holy site in the new faith, but then that messes up all the people moving with you, so we just cancel the whole thing.
				scope:host.faith = var:starting_faith
			}
		}
	}

	on_invalidated = {
		# Host becomes unlanded
		if = {
			limit = {
				scope:host = { is_landed = no }
			}
			scope:activity = {
				activity_type = { save_scope_as = activity_type }
			}
			every_attending_character = {
				trigger_event = activity_system.0320
			}
		}
		if = {
			limit = {
				scope:host = { is_incapable = yes }
			}
			scope:activity = {
				activity_type = { save_scope_as = activity_type }
			}
			scope:host = {
				trigger_event = activity_system.0330
			}
			every_attending_character = {
				limit = { NOT = { this = scope:host } }
				trigger_event = activity_system.0331
			}
		}
		if = {
			limit = {
				NOT = { scope:host.faith = var:starting_faith }
			}
			scope:activity = {
				activity_type = { save_scope_as = activity_type }
				activity_location = { save_scope_as = location }
			}
			every_attending_character = {
				trigger_event = RICEmisc.0010
			}
		}
	}

	on_host_death = {
		scope:activity = {
			set_variable = {
				name = activity_invalidated
			}
		}
	}

	province_filter = all
	ai_province_filter = realm
	wait_time_before_start = { days = 14 }

	###################
	# OPTIONS
	###################

	special_option_category = special_type

	options = {
		#########
		# TYPE OF VISIT
		#########
		special_type = {
			pr_pilgrimage_type_religious = {
				default = yes	
				ai_will_do = {
					value = 10
					if = {
						limit = {
							has_trait = zealous
						}
						add = 5
					}
					if = {
						limit = {
							has_trait = diligent
						}
						add = 5
					}
				}
			}
			# pr_pilgrimage_type_recreation = {		
			# 	ai_will_do = {
			# 		value = 10
			# 		if = {
			# 			limit = {
			# 				has_trait = ambitious
			# 			}
			# 			add = 5
			# 		}
			# 		if = {
			# 			limit = {
			# 				has_trait = humble
			# 			}
			# 			add = 5
			# 		}
			# 	}
			# }
		}

	}

	###################
	# PHASES
	###################

	phases = {
		
		pr_local_cnoc_uisnigh_pilgrimage_phase = {
			is_predefined = yes
			
			on_phase_active = {
				if = {
					limit = {
						this = scope:host
					}
					scope:host = { trigger_event = celtic.009 }
				}		
			}
			on_end = {
			}
		}
	}

	max_guest_arrival_delay_time = { months = 1 }

	# desc is only shown in debug AI watch window
	ai_will_do = {
		value = 50
		
		if = {
			limit = {
				has_trait = cynical
			}
			add = -25
		}
		if = {
			limit = {
				has_trait = zealous
			}
			add = 25
		}
		
		#Can you actually afford this?
		if = {
			limit = {
				NOT = { can_make_expensive_purchase_trigger = { PRICE = PR_activity_cost } }
			}
			add = -50
		}
	}

	ai_check_interval = 60

	ai_will_select_province = {
		value = 10
	}
	
	is_location_valid = {
		trigger_if = {
			limit = {
				exists = barony
			}
			barony = title:b_uisneach
		}
	}

	max_province_icons = 1

	province_score = {
		add = 0
		# Actual location
		if = {
			limit = {
				county ?= title:c_athlone
			}
			add = 100
		}
	}
	
	cost = {
		gold = {
			add = {
				value = 0
				add = {
					value = PR_activity_cost
					desc = hunt_base_cost
				}
			}
		}
	}

	ui_predicted_cost = {
		gold = {
			value = PR_activity_cost

			# Make it a multiple of 5 (rounded up)
			divide = 5 
			ceiling = yes 
			multiply = 5
		}
	}
	cooldown = { days = 3650 }
	
	###################
	# ACTIVITY-SPECIFIC PULSES
	###################
	
	pulse_actions = {

	}

	# on_start = {
	# }

	on_enter_passive_state = {
		
	}

	###################
	# GUEST HANDLING
	###################

	max_guests = 10

	guest_invite_rules = {
		rules = {
			# Relations.
			2 = activity_invite_rule_lovers
			2 = activity_invite_rule_rivals_if_appropriate

			# Family.
			3 = activity_invite_rule_extended_family

			# Misc landless.
			5 = activity_invite_rule_knights

			# MP 
			6 = activity_invite_mp
		}
		defaults = {
			1 = activity_invite_rule_friends
			1 = activity_invite_rule_close_family
			3 = activity_invite_rule_courtiers
			4 = activity_invite_rule_guests
			1 = activity_invite_spouses
		}
	}

	can_be_activity_guest = {
		faith.religion = scope:host.faith.religion
		is_adult = yes
		is_available = yes
		in_diplomatic_range = scope:host
		is_landed = no
	}

	host_intents = {
		
		intents = { pr_local_pilgrimage_worship_intent pr_local_pilgrimage_curiosity_intent }
		default = pr_local_pilgrimage_worship_intent
	}

	guest_intents = {
		intents = { pr_local_pilgrimage_worship_intent pr_local_pilgrimage_curiosity_intent }
		default = pr_local_pilgrimage_worship_intent
	}

	guest_join_chance = {
		base = 10
		base_activity_modifier = yes

		# Scripted Modifiers
		activity_guest_shared_ai_accept_modifier = yes
	}
	
	on_complete = {
		if = {
			limit = { this = scope:host }
			create_character_memory = {
				type = pr_cnoc_uisnigh_pilgrimage_host_memory
			}
		}
		else = {			
			create_character_memory = {
				type = pr_cnoc_uisnigh_pilgrimage_guest_memory
				participants = {
					host = scope:host
				}
			}
		}
	}

	#################
	#
	# TRAVEL
	#
	#################

	# Travel
	background = {
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_mountains.dds"
		environment = "environment_travel_mountain_settlement"
		ambience = "event:/SFX/Events/Backgrounds/mountains_day"
	}
	

	#################
	#
	# ARRIVED
	#
	#################

	#Fallback
	background = {
		texture = "gfx/interface/illustrations/event_scenes/mountains.dds"
		environment = "environment_event_mountains"
		ambience = "event:/SFX/Events/Backgrounds/mountains_day"
	}


	window_characters = {

		guest = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				triggered_animation = {
					trigger = {
						scope:character = {
							has_trait = zealous
						}
					}
					animation = { personality_zealous personality_honorable }
				}
				triggered_animation = {
					trigger = {
						scope:character = {
							OR = {
								has_trait = cynical
								has_trait = lazy
							}
						}
					}
					animation = { boredom eyeroll }
				}
				animation = personality_content
			}
		}

		guest = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				triggered_animation = {
					trigger = {
						scope:character = {
							has_trait = zealous
						}
					}
					animation = { personality_zealous personality_honorable }
				}
				triggered_animation = {
					trigger = {
						scope:character = {
							OR = {
								has_trait = cynical
								has_trait = lazy
							}
						}
					}
					animation = { boredom eyeroll }
				}
				animation = personality_compassionate
			}
		}
		
		host = {
			camera = camera_body
			
			effect = {
				if = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					scope:host = {
						add_to_list = characters
					}
				}
			}

			scripted_animation = {
				triggered_animation = {
					trigger = {
						scope:character = {
							OR = {
								has_trait = cynical
								has_trait = lazy
							}
						}
					}
					animation = { boredom eyeroll }
				}
				animation = personality_zealous
			}
		}
		
		travel_host = {
			camera = camera_body
			
			effect = {
				if = {
					limit = {
						NOT = {
							scope:host.location = scope:activity.activity_location
						}
					}
					scope:host = {
						add_to_list = characters
					}
				}
			}

			scripted_animation = {
				animation = jockey_walk
			}
		}

		guest = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				animation = jockey_walk
			}
		}

		guest = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				animation = jockey_walk
			}
		}
	}
}

#Hill of tara 
#pr_activity_delphi_pilgrimage
#hellenism_religion
#world_europe_south_east
#c_boeotia
#b_amfissa



#Delphi
pr_activity_delphi_pilgrimage= {
	is_shown = {
		highest_held_title_tier > tier_barony
		is_landed = yes
		religion = religion:hellenism_religion
		OR = {
			title:c_boeotia = {
				squared_distance = {
					target = root.capital_province
					value <= squared_distance_small
				}
			}
			AND = {
				capital_province = {
					geographical_region = world_europe_south_east
				}			
			}
		}
		trigger_if = {
			limit = {
				is_ai = yes
			}
			is_at_war = no
			short_term_gold >= PR_activity_cost
		}	
	}

	can_start = {
		religion = religion:hellenism_religion
		OR = {
			custom_description = {
				text = Pr_delphi_close_req
				title:c_boeotia = {
					squared_distance = {
						target = root.capital_province
						value <= squared_distance_small
					}
				}
			}

			custom_description = {
				text = Pr_delphi_long_distance_req
				# is_target_in_global_variable_list = {
				# 	name = unavailable_unique_decisions
				# 	target = flag:RICE_aachen_charlemagne_remains_transferred
				# }
				capital_province = {
					geographical_region = world_europe_south_east
				}
			}
		}
	}

	can_start_showing_failures_only = {
		is_available_adult = yes
	}

	is_valid = {
		NOT = {
			has_variable = activity_invalidated
		}
		scope:host = {
			is_landed = yes
			NOT = { is_incapable = yes }
		}
		scope:activity = {
			OR = {
				NOT = { has_variable = starting_faith }
				# We could check whether the place you're going to is still a holy site in the new faith, but then that messes up all the people moving with you, so we just cancel the whole thing.
				scope:host.faith = var:starting_faith
			}
		}
	}

	on_invalidated = {
		# Host becomes unlanded
		if = {
			limit = {
				scope:host = { is_landed = no }
			}
			scope:activity = {
				activity_type = { save_scope_as = activity_type }
			}
			every_attending_character = {
				trigger_event = activity_system.0320
			}
		}
		if = {
			limit = {
				scope:host = { is_incapable = yes }
			}
			scope:activity = {
				activity_type = { save_scope_as = activity_type }
			}
			scope:host = {
				trigger_event = activity_system.0330
			}
			every_attending_character = {
				limit = { NOT = { this = scope:host } }
				trigger_event = activity_system.0331
			}
		}
		if = {
			limit = {
				NOT = { scope:host.faith = var:starting_faith }
			}
			scope:activity = {
				activity_type = { save_scope_as = activity_type }
				activity_location = { save_scope_as = location }
			}
			every_attending_character = {
				trigger_event = RICEmisc.0010
			}
		}
	}

	on_host_death = {
		scope:activity = {
			set_variable = {
				name = activity_invalidated
			}
		}
	}

	province_filter = all
	ai_province_filter = realm
	wait_time_before_start = { days = 14 }

	###################
	# OPTIONS
	###################

	special_option_category = special_type

	options = {
		#########
		# TYPE OF VISIT
		#########
		special_type = {
			pr_pilgrimage_type_religious = {
				default = yes	
				ai_will_do = {
					value = 10
					if = {
						limit = {
							has_trait = zealous
						}
						add = 5
					}
					if = {
						limit = {
							has_trait = diligent
						}
						add = 5
					}
				}
			}
			# pr_pilgrimage_type_recreation = {		
			# 	ai_will_do = {
			# 		value = 10
			# 		if = {
			# 			limit = {
			# 				has_trait = ambitious
			# 			}
			# 			add = 5
			# 		}
			# 		if = {
			# 			limit = {
			# 				has_trait = humble
			# 			}
			# 			add = 5
			# 		}
			# 	}
			# }
		}

	}

	###################
	# PHASES
	###################

	phases = {
		
		pr_local_delphi_pilgrimage_phase = {
			is_predefined = yes
			
			on_phase_active = {
				if = {
					limit = {
						this = scope:host
					}
					scope:host = { trigger_event = hellenismos.017 }
				}		
			}
			on_end = {
			}
		}
	}

	max_guest_arrival_delay_time = { months = 1 }

	# desc is only shown in debug AI watch window
	ai_will_do = {
		value = 50
		
		if = {
			limit = {
				has_trait = cynical
			}
			add = -25
		}
		if = {
			limit = {
				has_trait = zealous
			}
			add = 25
		}
		
		#Can you actually afford this?
		if = {
			limit = {
				NOT = { can_make_expensive_purchase_trigger = { PRICE = PR_activity_cost } }
			}
			add = -50
		}
	}

	ai_check_interval = 60

	ai_will_select_province = {
		value = 10
	}
	
	is_location_valid = {
		trigger_if = {
			limit = {
				exists = barony
			}
			barony = title:b_amfissa
		}
	}

	max_province_icons = 1

	province_score = {
		add = 0
		# Actual location
		if = {
			limit = {
				county ?= title:c_boeotia
			}
			add = 100
		}
	}
	
	cost = {
		gold = {
			add = {
				value = 0
				add = {
					value = PR_activity_cost
					desc = hunt_base_cost
				}
			}
		}
	}

	ui_predicted_cost = {
		gold = {
			value = PR_activity_cost

			# Make it a multiple of 5 (rounded up)
			divide = 5 
			ceiling = yes 
			multiply = 5
		}
	}
	cooldown = { days = 3650 }
	
	###################
	# ACTIVITY-SPECIFIC PULSES
	###################
	
	pulse_actions = {

	}

	# on_start = {
	# }

	on_enter_passive_state = {
		
	}

	###################
	# GUEST HANDLING
	###################

	max_guests = 10

	guest_invite_rules = {
		rules = {
			# Relations.
			2 = activity_invite_rule_lovers
			2 = activity_invite_rule_rivals_if_appropriate

			# Family.
			3 = activity_invite_rule_extended_family

			# Misc landless.
			5 = activity_invite_rule_knights

			# MP 
			6 = activity_invite_mp
		}
		defaults = {
			1 = activity_invite_rule_friends
			1 = activity_invite_rule_close_family
			3 = activity_invite_rule_courtiers
			4 = activity_invite_rule_guests
			1 = activity_invite_spouses
		}
	}

	can_be_activity_guest = {
		faith.religion = scope:host.faith.religion
		is_adult = yes
		is_available = yes
		in_diplomatic_range = scope:host
		is_landed = no
	}

	host_intents = {
		
		intents = { pr_local_pilgrimage_worship_intent pr_local_pilgrimage_curiosity_intent }
		default = pr_local_pilgrimage_worship_intent
	}

	guest_intents = {
		intents = { pr_local_pilgrimage_worship_intent pr_local_pilgrimage_curiosity_intent }
		default = pr_local_pilgrimage_worship_intent
	}

	guest_join_chance = {
		base = 10
		base_activity_modifier = yes

		# Scripted Modifiers
		activity_guest_shared_ai_accept_modifier = yes
	}
	
	on_complete = {
		if = {
			limit = { this = scope:host }
			create_character_memory = {
				type = pr_delphi_pilgrimage_host_memory
			}
		}
		else = {			
			create_character_memory = {
				type = pr_delphi_pilgrimage_guest_memory
				participants = {
					host = scope:host
				}
			}
		}
	}

	#################
	#
	# TRAVEL
	#
	#################

	# Travel
	background = {
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_mountains.dds"
		environment = "environment_travel_mountain_settlement"
		ambience = "event:/SFX/Events/Backgrounds/mountains_day"
	}
	

	#################
	#
	# ARRIVED
	#
	#################

	#Fallback
	background = {
		texture = "gfx/interface/illustrations/event_scenes/mountains.dds"
		environment = "environment_event_mountains"
		ambience = "event:/SFX/Events/Backgrounds/mountains_day"
	}


	window_characters = {

		guest = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				triggered_animation = {
					trigger = {
						scope:character = {
							has_trait = zealous
						}
					}
					animation = { personality_zealous personality_honorable }
				}
				triggered_animation = {
					trigger = {
						scope:character = {
							OR = {
								has_trait = cynical
								has_trait = lazy
							}
						}
					}
					animation = { boredom eyeroll }
				}
				animation = personality_content
			}
		}

		guest = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				triggered_animation = {
					trigger = {
						scope:character = {
							has_trait = zealous
						}
					}
					animation = { personality_zealous personality_honorable }
				}
				triggered_animation = {
					trigger = {
						scope:character = {
							OR = {
								has_trait = cynical
								has_trait = lazy
							}
						}
					}
					animation = { boredom eyeroll }
				}
				animation = personality_compassionate
			}
		}
		
		host = {
			camera = camera_body
			
			effect = {
				if = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					scope:host = {
						add_to_list = characters
					}
				}
			}

			scripted_animation = {
				triggered_animation = {
					trigger = {
						scope:character = {
							OR = {
								has_trait = cynical
								has_trait = lazy
							}
						}
					}
					animation = { boredom eyeroll }
				}
				animation = personality_zealous
			}
		}
		
		travel_host = {
			camera = camera_body
			
			effect = {
				if = {
					limit = {
						NOT = {
							scope:host.location = scope:activity.activity_location
						}
					}
					scope:host = {
						add_to_list = characters
					}
				}
			}

			scripted_animation = {
				animation = jockey_walk
			}
		}

		guest = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				animation = jockey_walk
			}
		}

		guest = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				animation = jockey_walk
			}
		}
	}
}


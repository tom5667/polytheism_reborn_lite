
# Have a look at _court_positions.info for documentation

# COURT POSITIONS
# court_artificer_court_position
pr_court_augur_court_position = {
	max_available_positions = 1
	category = court_position_category_special
	#category = court_position_category_special

	opinion = {
		value = regular_court_position_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 1
		add = {
			value = learning
			multiply = 1.75
			max = 50
			desc = court_position_skill_learning
		}
		if = {
			limit = {
				has_trait = mystic_3
			}
			add = { 
				value = 20
				desc = court_position_mystic_3_trait
			}
		}
		else_if = {
			limit = {
				has_trait = mystic_2
			}
			add = { 
				value = 10
				desc = court_position_mystic_2_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = mystic_1
			}
			add = { 
				value = 10
				desc = court_position_mystic_1_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = theologian
			}
			add = {
				value = 10
				desc = court_position_theologian_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = education_learning_1
			}
			add = {
				value = 20
				desc = court_position_education_learning_1_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = education_learning_2
			}
			add = {
				value = 20
				desc = court_position_education_learning_2_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = education_learning_3
			}
			add = {
				value = 20
				desc = court_position_education_learning_3_trait
			}
		}

		add = court_position_aptitude_family_business_value
		add = court_position_aptitude_low_penalty_value
	}

	# Is this an available position for this court? (root is court owner)
	is_shown = {
		has_religion = religion:roman_religion
	}
	
	is_shown_character = {
		scope:employee = {
			is_imprisoned = no
		}
	}

	valid_character = {
		scope:employee = {
			has_religion = religion:roman_religion
			AND = {
				OR = {
					has_trait = education_learning_1
					has_trait = education_learning_2
					has_trait = education_learning_3
					has_trait = mystic_2
					has_trait = mystic_1
					has_trait = mystic_3
					learning >= 11 
				}
			}
			# trigger_if = {
			# 	limit = {
			# 		scope:liege.faith = {
			# 			has_doctrine = doctrine_gender_male_dominated
			# 		}
			# 	}
			# 	is_male = yes
			# }
			# trigger_if = {
			# 	limit = {
			# 		scope:liege.faith = {
			# 			has_doctrine = doctrine_gender_female_dominated
			# 		}
			# 	}
			# 	is_female = yes
			# }
		}
	}
	


	valid_character = {
	}

	revoke_cost = {
		prestige =  {
			value = major_court_position_prestige_revoke_cost
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = pr_court_augur_court_position
					any_court_position_holder = {
				        type = pr_court_augur_court_position
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
		}
	}

	salary = {
		gold = {
			value = medium_court_position_salary
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					scope:liege = {
						exists = dynasty
						dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

						employs_court_position = pr_court_augur_court_position
						any_court_position_holder = {
					        type = pr_court_augur_court_position
							exists = dynasty
							house = prev.house
						}
					}
				}
				multiply = {
					value = 0.0
					desc = inner_circle_salary_mod
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
		}
		round = no
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		aptitude_level_1 = {
			monthly_court_grandeur_change_mult = 0.10
		}
		aptitude_level_2 = {
			court_grandeur_baseline_add = 1
			monthly_court_grandeur_change_mult = 0.10
		}
		aptitude_level_3 = {
			court_grandeur_baseline_add = 1
			monthly_court_grandeur_change_mult = 0.15
		}
		aptitude_level_4 = {
			court_grandeur_baseline_add = 2
			monthly_court_grandeur_change_mult = 0.20
		}
		aptitude_level_5 = {
			court_grandeur_baseline_add = 2
			monthly_court_grandeur_change_mult = 0.25
		}
	}

	custom_employer_modifier_description = pr_court_augur_employer_custom_effect_description

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
		learning = 1
	}

	#custom_employee_modifier_description = court_physician_employee_custom_effect_description

	on_court_position_received = {
		#court_physician_title_accepted_effect = yes
		court_augur_title_accepted_effect = yes 
	}
	on_court_position_revoked = { 
		#court_physician_title_revoked_effect = yes
		court_augur_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		#court_physician_title_invalidated_effect = yes
		court_augur_title_invalidated_effect = yes
	}

	search_for_courtier = {
		send_interface_toast = {
			title = pr_hire_augur_decision
			custom_tooltip = hire_augur_decision_effect_tooltip
		}
		hidden_effect = {
			add_character_flag = {
				flag = pr_hire_augur_decision_text
				days = 20
			}
		}

		trigger_event = {
			id = cdr.014
			days = 14
		}
	}

	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
        value = 150
        add = scope:base_value
        add = court_position_candidate_score_base_value
        add = court_position_candidate_aptitude_value
		# No debt considerations for Physicians, they are too important
        # AI is less likely to fire the court physician, unless they have a better candidate.
        if = {
            limit = {
                exists = scope:firing_court_position
            }
            add = 200
            scope:employee = {
                # Does the liege have a better candidate that they should be hiring instead?
                if = {
                    limit = {
                        scope:highest_available_aptitude > scope:employee_aptitude
                    }
                    add = -150
                }
            }
        }
    }
}

pr_court_flamen_mars_court_position = {
	max_available_positions = 1
	#category = court_position_category_common
	category = court_position_category_special

	opinion = {
		value = regular_court_position_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 1
		add = {
			value = learning
			multiply = 1.75
			max = 50
			desc = court_position_skill_learning
		}
		if = {
			limit = {
				has_trait = mystic_3
			}
			add = { 
				value = 20
				desc = court_position_mystic_3_trait
			}
		}
		else_if = {
			limit = {
				has_trait = mystic_2
			}
			add = { 
				value = 10
				desc = court_position_mystic_2_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = mystic_1
			}
			add = { 
				value = 10
				desc = court_position_mystic_1_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = theologian
			}
			add = {
				value = 10
				desc = court_position_theologian_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = education_learning_1
			}
			add = {
				value = 20
				desc = court_position_education_learning_1_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = education_learning_2
			}
			add = {
				value = 20
				desc = court_position_education_learning_2_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = education_learning_3
			}
			add = {
				value = 20
				desc = court_position_education_learning_3_trait
			}
		}

		add = court_position_aptitude_family_business_value
		add = court_position_aptitude_low_penalty_value
	}

	# Is this an available position for this court? (root is court owner)
	is_shown = {
		AND = {
			has_religion = religion:roman_religion
			is_independent_ruler = yes
		}
	}
	
	is_shown_character = {
		scope:employee = {
			is_imprisoned = no
		}
	}

	valid_character = {
		scope:employee = {
			has_religion = religion:roman_religion
			AND = {
				OR = {
					has_trait = education_learning_1
					has_trait = education_learning_2
					has_trait = education_learning_3
					has_trait = mystic_2
					has_trait = mystic_1
					has_trait = mystic_3
					learning >= 11 
				}
				is_male = yes	
			}
		}
	}
	


	valid_character = {
	}

	revoke_cost = {
		prestige =  {
			value = major_court_position_prestige_revoke_cost
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = pr_court_flamen_mars_court_position
					any_court_position_holder = {
				        type = pr_court_flamen_mars_court_position
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
		}
	}

	salary = {
		gold = {
			#value = court_position_physician_salary
			value = minor_court_position_salary
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					scope:liege = {
						exists = dynasty
						dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

						employs_court_position = pr_court_flamen_mars_court_position
						any_court_position_holder = {
					        type = pr_court_flamen_mars_court_position
							exists = dynasty
							house = prev.house
						}
					}
				}
				multiply = {
					value = 0.0
					desc = inner_circle_salary_mod
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
		}
		round = no
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		aptitude_level_1 = {
			monthly_piety_gain_mult = 0.02
		}
		aptitude_level_2 = {
			monthly_piety_gain_mult = 0.04
		}
		aptitude_level_3 = {
			monthly_piety_gain_mult = 0.06
		}
		aptitude_level_4 = {
			monthly_piety_gain_mult = 0.08
		}
		aptitude_level_5 = {
			monthly_piety_gain_mult = 0.1
		}
	}

	custom_employer_modifier_description = pr_court_flamen_mars_employer_custom_effect_description

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
		learning = 1
	}

	#custom_employee_modifier_description = court_physician_employee_custom_effect_description

	on_court_position_received = {
		#court_physician_title_accepted_effect = yes
		court_flamen_mars_title_accepted_effect = yes 
	}
	on_court_position_revoked = { 
		#court_physician_title_revoked_effect = yes
		court_flamen_mars_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		#court_physician_title_invalidated_effect = yes
		court_flamen_mars_title_invalidated_effect = yes
	}

	
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
        value = 150
        add = scope:base_value
        add = court_position_candidate_score_base_value
        add = court_position_candidate_aptitude_value
		# No debt considerations for Physicians, they are too important
        # AI is less likely to fire the court physician, unless they have a better candidate.
        if = {
            limit = {
                exists = scope:firing_court_position
            }
            add = 200
            scope:employee = {
                # Does the liege have a better candidate that they should be hiring instead?
                if = {
                    limit = {
                        scope:highest_available_aptitude > scope:employee_aptitude
                    }
                    add = -150
                }
            }
        }
    }
}

pr_court_flamen_quirinus_court_position = {
	max_available_positions = 1
	#category = court_position_category_common
	category = court_position_category_special

	opinion = {
		value = regular_court_position_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 1
		add = {
			value = learning
			multiply = 1.75
			max = 50
			desc = court_position_skill_learning
		}
		if = {
			limit = {
				has_trait = mystic_3
			}
			add = { 
				value = 20
				desc = court_position_mystic_3_trait
			}
		}
		else_if = {
			limit = {
				has_trait = mystic_2
			}
			add = { 
				value = 10
				desc = court_position_mystic_2_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = mystic_1
			}
			add = { 
				value = 10
				desc = court_position_mystic_1_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = theologian
			}
			add = {
				value = 10
				desc = court_position_theologian_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = education_learning_1
			}
			add = {
				value = 20
				desc = court_position_education_learning_1_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = education_learning_2
			}
			add = {
				value = 20
				desc = court_position_education_learning_2_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = education_learning_3
			}
			add = {
				value = 20
				desc = court_position_education_learning_3_trait
			}
		}

		add = court_position_aptitude_family_business_value
		add = court_position_aptitude_low_penalty_value
	}

	# Is this an available position for this court? (root is court owner)
	is_shown = {
		AND = {
			has_religion = religion:roman_religion
			is_independent_ruler = yes
		}
	}
	
	is_shown_character = {
		scope:employee = {
			is_imprisoned = no
		}
	}

	valid_character = {
		scope:employee = {
			has_religion = religion:roman_religion
			AND = {
				OR = {
					has_trait = education_learning_1
					has_trait = education_learning_2
					has_trait = education_learning_3
					has_trait = mystic_2
					has_trait = mystic_1
					has_trait = mystic_3
					learning >= 11 
				}
				is_male = yes
				#has_trait = cdr_cmd3_religion
			}
		}
	}
	


	valid_character = {
	}

	revoke_cost = {
		prestige =  {
			value = major_court_position_prestige_revoke_cost
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = pr_court_flamen_quirinus_court_position
					any_court_position_holder = {
				        type = pr_court_flamen_quirinus_court_position
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
		}
	}

	salary = {
		gold = {
			#value = court_position_physician_salary
			value = minor_court_position_salary
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					scope:liege = {
						exists = dynasty
						dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

						employs_court_position = pr_court_flamen_quirinus_court_position
						any_court_position_holder = {
					        type = pr_court_flamen_quirinus_court_position
							exists = dynasty
							house = prev.house
						}
					}
				}
				multiply = {
					value = 0.0
					desc = inner_circle_salary_mod
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
		}
		round = no
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		aptitude_level_1 = {
			monthly_piety_gain_mult = 0.02
		}
		aptitude_level_2 = {
			monthly_piety_gain_mult = 0.04
		}
		aptitude_level_3 = {
			monthly_piety_gain_mult = 0.06
		}
		aptitude_level_4 = {
			monthly_piety_gain_mult = 0.08
		}
		aptitude_level_5 = {
			monthly_piety_gain_mult = 0.1
		}
	}

	custom_employer_modifier_description = pr_court_flamen_quirinus_employer_custom_effect_description

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
		learning = 1
	}

	#custom_employee_modifier_description = court_physician_employee_custom_effect_description

	on_court_position_received = {
		#court_physician_title_accepted_effect = yes
		court_flamen_quirinus_title_accepted_effect = yes 
	}
	on_court_position_revoked = { 
		#court_physician_title_revoked_effect = yes
		court_flamen_quirinus_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		#court_physician_title_invalidated_effect = yes
		court_flamen_quirinus_title_invalidated_effect = yes
	}

	
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
        value = 150
        add = scope:base_value
        add = court_position_candidate_score_base_value
        add = court_position_candidate_aptitude_value
		# No debt considerations for Physicians, they are too important
        # AI is less likely to fire the court physician, unless they have a better candidate.
        if = {
            limit = {
                exists = scope:firing_court_position
            }
            add = 200
            scope:employee = {
                # Does the liege have a better candidate that they should be hiring instead?
                if = {
                    limit = {
                        scope:highest_available_aptitude > scope:employee_aptitude
                    }
                    add = -150
                }
            }
        }
    }
}

pr_court_flamen_augustus_court_position = {
	max_available_positions = 1
	#category = court_position_category_common
	category = court_position_category_special

	opinion = {
		value = regular_court_position_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 1
		add = {
			value = learning
			multiply = 1.75
			max = 50
			desc = court_position_skill_learning
		}
		if = {
			limit = {
				has_trait = mystic_3
			}
			add = { 
				value = 20
				desc = court_position_mystic_3_trait
			}
		}
		else_if = {
			limit = {
				has_trait = mystic_2
			}
			add = { 
				value = 10
				desc = court_position_mystic_2_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = mystic_1
			}
			add = { 
				value = 10
				desc = court_position_mystic_1_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = theologian
			}
			add = {
				value = 10
				desc = court_position_theologian_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = education_learning_1
			}
			add = {
				value = 20
				desc = court_position_education_learning_1_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = education_learning_2
			}
			add = {
				value = 20
				desc = court_position_education_learning_2_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = education_learning_3
			}
			add = {
				value = 20
				desc = court_position_education_learning_3_trait
			}
		}

		add = court_position_aptitude_family_business_value
		add = court_position_aptitude_low_penalty_value
	}

	# Is this an available position for this court? (root is court owner)
	is_shown = {
		AND = {
			has_religion = religion:roman_religion
			is_independent_ruler = yes
		}
	}
	
	is_shown_character = {
		scope:employee = {
			is_imprisoned = no
		}
	}

	valid_character = {
		scope:employee = {
			has_religion = religion:roman_religion
			AND = {
				OR = {
					has_trait = education_learning_1
					has_trait = education_learning_2
					has_trait = education_learning_3
					has_trait = mystic_2
					has_trait = mystic_1
					has_trait = mystic_3
					learning >= 11 
				}
				is_male = yes
				has_trait = imperial_cult
			}
		}
	}
	


	valid_character = {
	}

	revoke_cost = {
		prestige =  {
			value = major_court_position_prestige_revoke_cost
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = pr_court_flamen_augustus_court_position
					any_court_position_holder = {
				        type = pr_court_flamen_augustus_court_position
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
		}
	}

	salary = {
		gold = {
			#value = court_position_physician_salary
			value = minor_court_position_salary
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					scope:liege = {
						exists = dynasty
						dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

						employs_court_position = pr_court_flamen_augustus_court_position
						any_court_position_holder = {
					        type = pr_court_flamen_augustus_court_position
							exists = dynasty
							house = prev.house
						}
					}
				}
				multiply = {
					value = 0.0
					desc = inner_circle_salary_mod
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
		}
		round = no
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		aptitude_level_1 = {
			monthly_piety_gain_mult = 0.02
		}
		aptitude_level_2 = {
			monthly_piety_gain_mult = 0.04
		}
		aptitude_level_3 = {
			monthly_piety_gain_mult = 0.06
		}
		aptitude_level_4 = {
			monthly_piety_gain_mult = 0.08
		}
		aptitude_level_5 = {
			monthly_piety_gain_mult = 0.1
		}
	}

	custom_employer_modifier_description = pr_court_flamen_augustus_employer_custom_effect_description

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
		learning = 1
	}

	#custom_employee_modifier_description = court_physician_employee_custom_effect_description

	on_court_position_received = {
		#court_physician_title_accepted_effect = yes
		court_flamen_augustus_title_accepted_effect = yes 
	}
	on_court_position_revoked = { 
		#court_physician_title_revoked_effect = yes
		court_flamen_augustus_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		#court_physician_title_invalidated_effect = yes
		court_flamen_augustus_title_invalidated_effect = yes
	}

	
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
        value = 150
        add = scope:base_value
        add = court_position_candidate_score_base_value
        add = court_position_candidate_aptitude_value
		# No debt considerations for Physicians, they are too important
        # AI is less likely to fire the court physician, unless they have a better candidate.
        if = {
            limit = {
                exists = scope:firing_court_position
            }
            add = 200
            scope:employee = {
                # Does the liege have a better candidate that they should be hiring instead?
                if = {
                    limit = {
                        scope:highest_available_aptitude > scope:employee_aptitude
                    }
                    add = -150
                }
            }
        }
    }
}

pr_court_flamen_carmentis_court_position = {
	max_available_positions = 1
	#category = court_position_category_common
	category = court_position_category_special

	opinion = {
		value = regular_court_position_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 1
		add = {
			value = learning
			multiply = 1.75
			max = 50
			desc = court_position_skill_learning
		}
		if = {
			limit = {
				has_trait = mystic_3
			}
			add = { 
				value = 20
				desc = court_position_mystic_3_trait
			}
		}
		else_if = {
			limit = {
				has_trait = mystic_2
			}
			add = { 
				value = 10
				desc = court_position_mystic_2_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = mystic_1
			}
			add = { 
				value = 10
				desc = court_position_mystic_1_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = theologian
			}
			add = {
				value = 10
				desc = court_position_theologian_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = education_learning_1
			}
			add = {
				value = 20
				desc = court_position_education_learning_1_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = education_learning_2
			}
			add = {
				value = 20
				desc = court_position_education_learning_2_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = education_learning_3
			}
			add = {
				value = 20
				desc = court_position_education_learning_3_trait
			}
		}

		add = court_position_aptitude_family_business_value
		add = court_position_aptitude_low_penalty_value
	}

	# Is this an available position for this court? (root is court owner)
	is_shown = {
		AND = {
			has_religion = religion:roman_religion
			is_independent_ruler = yes
		}
	}
	
	is_shown_character = {
		scope:employee = {
			is_imprisoned = no
		}
	}

	valid_character = {
		scope:employee = {
			has_religion = religion:roman_religion
			AND = {
				OR = {
					has_trait = education_learning_1
					has_trait = education_learning_2
					has_trait = education_learning_3
					has_trait = mystic_2
					has_trait = mystic_1
					has_trait = mystic_3
					learning >= 11 
				}
				is_male = yes
				#has_trait = cdr_cmd3_religion
			}
		}
	}
	


	valid_character = {
	}

	revoke_cost = {
		prestige =  {
			value = major_court_position_prestige_revoke_cost
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = pr_court_carmentis_court_position
					any_court_position_holder = {
				        type = pr_court_carmentis_court_position
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
		}
	}

	salary = {
		gold = {
			value = court_position_physician_salary
			#value = minor_court_position_salary
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					scope:liege = {
						exists = dynasty
						dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

						employs_court_position = pr_court_flamen_carmentis_court_position
						any_court_position_holder = {
					        type = pr_court_flamen_carmentis_court_position
							exists = dynasty
							house = prev.house
						}
					}
				}
				multiply = {
					value = 0.0
					desc = inner_circle_salary_mod
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
		}
		round = no
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		aptitude_level_1 = {
			monthly_piety_gain_mult = 0.02
		}
		aptitude_level_2 = {
			monthly_piety_gain_mult = 0.04
		}
		aptitude_level_3 = {
			monthly_piety_gain_mult = 0.06
		}
		aptitude_level_4 = {
			monthly_piety_gain_mult = 0.08
		}
		aptitude_level_5 = {
			monthly_piety_gain_mult = 0.1
		}
	}

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
		learning = 1
	}

	#custom_employee_modifier_description = court_physician_employee_custom_effect_description

	on_court_position_received = {
		#court_physician_title_accepted_effect = yes
		court_flamen_carmentis_title_accepted_effect = yes 
	}
	on_court_position_revoked = { 
		#court_physician_title_revoked_effect = yes
		court_flamen_carmentis_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		#court_physician_title_invalidated_effect = yes
		court_flamen_carmentis_title_invalidated_effect = yes
	}

	
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
        value = 150
        add = scope:base_value
        add = court_position_candidate_score_base_value
        add = court_position_candidate_aptitude_value
		# No debt considerations for Physicians, they are too important
        # AI is less likely to fire the court physician, unless they have a better candidate.
        if = {
            limit = {
                exists = scope:firing_court_position
            }
            add = 200
            scope:employee = {
                # Does the liege have a better candidate that they should be hiring instead?
                if = {
                    limit = {
                        scope:highest_available_aptitude > scope:employee_aptitude
                    }
                    add = -150
                }
            }
        }
    }
}

pr_court_flamen_ceres_court_position = {
	max_available_positions = 1
	#category = court_position_category_common
	category = court_position_category_special

	opinion = {
		value = regular_court_position_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 1
		add = {
			value = learning
			multiply = 1.75
			max = 50
			desc = court_position_skill_learning
		}
		if = {
			limit = {
				has_trait = mystic_3
			}
			add = { 
				value = 20
				desc = court_position_mystic_3_trait
			}
		}
		else_if = {
			limit = {
				has_trait = mystic_2
			}
			add = { 
				value = 10
				desc = court_position_mystic_2_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = mystic_1
			}
			add = { 
				value = 10
				desc = court_position_mystic_1_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = theologian
			}
			add = {
				value = 10
				desc = court_position_theologian_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = education_learning_1
			}
			add = {
				value = 20
				desc = court_position_education_learning_1_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = education_learning_2
			}
			add = {
				value = 20
				desc = court_position_education_learning_2_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = education_learning_3
			}
			add = {
				value = 20
				desc = court_position_education_learning_3_trait
			}
		}

		add = court_position_aptitude_family_business_value
		add = court_position_aptitude_low_penalty_value
	}

	# Is this an available position for this court? (root is court owner)
	is_shown = {
		AND = {
			has_religion = religion:roman_religion
			is_independent_ruler = yes
		}
	}
	
	is_shown_character = {
		scope:employee = {
			is_imprisoned = no
		}
	}

	valid_character = {
		scope:employee = {
			has_religion = religion:roman_religion
			AND = {
				OR = {
					has_trait = education_learning_1
					has_trait = education_learning_2
					has_trait = education_learning_3
					has_trait = mystic_2
					has_trait = mystic_1
					has_trait = mystic_3
					learning >= 11 
				}
				is_male = yes
				#has_trait = cdr_cmd3_religion
			}
		}
	}
	


	valid_character = {
	}

	revoke_cost = {
		prestige =  {
			value = major_court_position_prestige_revoke_cost
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = pr_court_flamen_ceres_court_position
					any_court_position_holder = {
				        type = pr_court_flamen_ceres_court_position
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
		}
	}

	salary = {
		gold = {
			value = court_position_physician_salary
			#value = minor_court_position_salary
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					scope:liege = {
						exists = dynasty
						dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

						employs_court_position = pr_court_flamen_ceres_court_position
						any_court_position_holder = {
					        type = pr_court_flamen_ceres_court_position
							exists = dynasty
							house = prev.house
						}
					}
				}
				multiply = {
					value = 0.0
					desc = inner_circle_salary_mod
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
		}
		round = no
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		aptitude_level_1 = {
			monthly_piety_gain_mult = 0.02
		}
		aptitude_level_2 = {
			monthly_piety_gain_mult = 0.04
		}
		aptitude_level_3 = {
			monthly_piety_gain_mult = 0.06
		}
		aptitude_level_4 = {
			monthly_piety_gain_mult = 0.08
		}
		aptitude_level_5 = {
			monthly_piety_gain_mult = 0.1
		}
	}

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
		learning = 1
	}

	#custom_employee_modifier_description = court_physician_employee_custom_effect_description

	on_court_position_received = {
		#court_physician_title_accepted_effect = yes
		court_flamen_ceres_title_accepted_effect = yes 
	}
	on_court_position_revoked = { 
		#court_physician_title_revoked_effect = yes
		court_flamen_ceres_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		#court_physician_title_invalidated_effect = yes
		court_flamen_ceres_title_invalidated_effect = yes
	}

	
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
        value = 150
        add = scope:base_value
        add = court_position_candidate_score_base_value
        add = court_position_candidate_aptitude_value
		# No debt considerations for Physicians, they are too important
        # AI is less likely to fire the court physician, unless they have a better candidate.
        if = {
            limit = {
                exists = scope:firing_court_position
            }
            add = 200
            scope:employee = {
                # Does the liege have a better candidate that they should be hiring instead?
                if = {
                    limit = {
                        scope:highest_available_aptitude > scope:employee_aptitude
                    }
                    add = -150
                }
            }
        }
    }
}

pr_court_flamen_flora_court_position = {
	max_available_positions = 1
	#category = court_position_category_common
	category = court_position_category_special

	opinion = {
		value = regular_court_position_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 1
		add = {
			value = learning
			multiply = 1.75
			max = 50
			desc = court_position_skill_learning
		}
		if = {
			limit = {
				has_trait = mystic_3
			}
			add = { 
				value = 20
				desc = court_position_mystic_3_trait
			}
		}
		else_if = {
			limit = {
				has_trait = mystic_2
			}
			add = { 
				value = 10
				desc = court_position_mystic_2_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = mystic_1
			}
			add = { 
				value = 10
				desc = court_position_mystic_1_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = theologian
			}
			add = {
				value = 10
				desc = court_position_theologian_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = education_learning_1
			}
			add = {
				value = 20
				desc = court_position_education_learning_1_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = education_learning_2
			}
			add = {
				value = 20
				desc = court_position_education_learning_2_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = education_learning_3
			}
			add = {
				value = 20
				desc = court_position_education_learning_3_trait
			}
		}

		add = court_position_aptitude_family_business_value
		add = court_position_aptitude_low_penalty_value
	}

	# Is this an available position for this court? (root is court owner)
	is_shown = {
		has_religion = religion:roman_religion
	}
	
	is_shown_character = {
		scope:employee = {
			is_imprisoned = no
		}
	}

	valid_character = {
		scope:employee = {
			has_religion = religion:roman_religion
			AND = {
				OR = {
					has_trait = education_learning_1
					has_trait = education_learning_2
					has_trait = education_learning_3
					has_trait = mystic_2
					has_trait = mystic_1
					has_trait = mystic_3
					learning >= 11 
				}
				is_male = yes
				#has_trait = cdr_cmd3_religion
			}
		}
	}
	


	valid_character = {
	}

	revoke_cost = {
		prestige =  {
			value = major_court_position_prestige_revoke_cost
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = pr_court_flamen_flora_court_position
					any_court_position_holder = {
				        type = pr_court_flamen_flora_court_position
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
		}
	}

	salary = {
		gold = {
			value = court_position_physician_salary
			#value = minor_court_position_salary
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					scope:liege = {
						exists = dynasty
						dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

						employs_court_position = pr_court_flamen_flora_court_position
						any_court_position_holder = {
					        type = pr_court_flamen_flora_court_position
							exists = dynasty
							house = prev.house
						}
					}
				}
				multiply = {
					value = 0.0
					desc = inner_circle_salary_mod
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
		}
		round = no
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		aptitude_level_1 = {
			monthly_piety_gain_mult = 0.02
		}
		aptitude_level_2 = {
			monthly_piety_gain_mult = 0.04
		}
		aptitude_level_3 = {
			monthly_piety_gain_mult = 0.06
		}
		aptitude_level_4 = {
			monthly_piety_gain_mult = 0.08
		}
		aptitude_level_5 = {
			monthly_piety_gain_mult = 0.1
		}
	}

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
		learning = 1
	}

	#custom_employee_modifier_description = court_physician_employee_custom_effect_description

	on_court_position_received = {
		#court_physician_title_accepted_effect = yes
		court_flamen_flora_title_accepted_effect = yes 
	}
	on_court_position_revoked = { 
		#court_physician_title_revoked_effect = yes
		court_flamen_flora_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		#court_physician_title_invalidated_effect = yes
		court_flamen_flora_title_invalidated_effect = yes
	}

	
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
        value = 150
        add = scope:base_value
        add = court_position_candidate_score_base_value
        add = court_position_candidate_aptitude_value
		# No debt considerations for Physicians, they are too important
        # AI is less likely to fire the court physician, unless they have a better candidate.
        if = {
            limit = {
                exists = scope:firing_court_position
            }
            add = 200
            scope:employee = {
                # Does the liege have a better candidate that they should be hiring instead?
                if = {
                    limit = {
                        scope:highest_available_aptitude > scope:employee_aptitude
                    }
                    add = -150
                }
            }
        }
    }
}

pr_court_flamen_furrina_court_position = {
	max_available_positions = 1
	#category = court_position_category_common
	category = court_position_category_special

	opinion = {
		value = regular_court_position_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 1
		add = {
			value = learning
			multiply = 1.75
			max = 50
			desc = court_position_skill_learning
		}
		if = {
			limit = {
				has_trait = mystic_3
			}
			add = { 
				value = 20
				desc = court_position_mystic_3_trait
			}
		}
		else_if = {
			limit = {
				has_trait = mystic_2
			}
			add = { 
				value = 10
				desc = court_position_mystic_2_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = mystic_1
			}
			add = { 
				value = 10
				desc = court_position_mystic_1_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = theologian
			}
			add = {
				value = 10
				desc = court_position_theologian_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = education_learning_1
			}
			add = {
				value = 20
				desc = court_position_education_learning_1_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = education_learning_2
			}
			add = {
				value = 20
				desc = court_position_education_learning_2_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = education_learning_3
			}
			add = {
				value = 20
				desc = court_position_education_learning_3_trait
			}
		}

		add = court_position_aptitude_family_business_value
		add = court_position_aptitude_low_penalty_value
	}

	# Is this an available position for this court? (root is court owner)
	is_shown = {
		has_religion = religion:roman_religion
	}
	
	is_shown_character = {
		scope:employee = {
			is_imprisoned = no
		}
	}

	valid_character = {
		scope:employee = {
			has_religion = religion:roman_religion
			AND = {
				OR = {
					has_trait = education_learning_1
					has_trait = education_learning_2
					has_trait = education_learning_3
					has_trait = mystic_2
					has_trait = mystic_1
					has_trait = mystic_3
					learning >= 11 
				}
				is_male = yes
				#has_trait = cdr_cmd3_religion
			}
		}
	}
	


	valid_character = {
	}

	revoke_cost = {
		prestige =  {
			value = major_court_position_prestige_revoke_cost
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = pr_court_flamen_furrina_court_position
					any_court_position_holder = {
				        type = pr_court_flamen_furrina_court_position
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
		}
	}

	salary = {
		gold = {
			value = court_position_physician_salary
			#value = minor_court_position_salary
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					scope:liege = {
						exists = dynasty
						dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

						employs_court_position = pr_court_flamen_furrina_court_position
						any_court_position_holder = {
					        type = pr_court_flamen_furrina_court_position
							exists = dynasty
							house = prev.house
						}
					}
				}
				multiply = {
					value = 0.0
					desc = inner_circle_salary_mod
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
		}
		round = no
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		aptitude_level_1 = {
			monthly_piety_gain_mult = 0.02
		}
		aptitude_level_2 = {
			monthly_piety_gain_mult = 0.04
		}
		aptitude_level_3 = {
			monthly_piety_gain_mult = 0.06
		}
		aptitude_level_4 = {
			monthly_piety_gain_mult = 0.08
		}
		aptitude_level_5 = {
			monthly_piety_gain_mult = 0.1
		}
	}

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
		learning = 1
	}

	#custom_employee_modifier_description = court_physician_employee_custom_effect_description

	on_court_position_received = {
		#court_physician_title_accepted_effect = yes
		court_flamen_furrina_title_accepted_effect = yes 
	}
	on_court_position_revoked = { 
		#court_physician_title_revoked_effect = yes
		court_flamen_furrina_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		#court_physician_title_invalidated_effect = yes
		court_flamen_furrina_title_invalidated_effect = yes
	}

	
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
        value = 150
        add = scope:base_value
        add = court_position_candidate_score_base_value
        add = court_position_candidate_aptitude_value
		# No debt considerations for Physicians, they are too important
        # AI is less likely to fire the court physician, unless they have a better candidate.
        if = {
            limit = {
                exists = scope:firing_court_position
            }
            add = 200
            scope:employee = {
                # Does the liege have a better candidate that they should be hiring instead?
                if = {
                    limit = {
                        scope:highest_available_aptitude > scope:employee_aptitude
                    }
                    add = -150
                }
            }
        }
    }
}

pr_court_flamen_pomona_court_position = {
	max_available_positions = 1
	#category = court_position_category_common
	category = court_position_category_special

	opinion = {
		value = regular_court_position_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 1
		add = {
			value = learning
			multiply = 1.75
			max = 50
			desc = court_position_skill_learning
		}
		if = {
			limit = {
				has_trait = mystic_3
			}
			add = { 
				value = 20
				desc = court_position_mystic_3_trait
			}
		}
		else_if = {
			limit = {
				has_trait = mystic_2
			}
			add = { 
				value = 10
				desc = court_position_mystic_2_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = mystic_1
			}
			add = { 
				value = 10
				desc = court_position_mystic_1_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = theologian
			}
			add = {
				value = 10
				desc = court_position_theologian_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = education_learning_1
			}
			add = {
				value = 20
				desc = court_position_education_learning_1_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = education_learning_2
			}
			add = {
				value = 20
				desc = court_position_education_learning_2_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = education_learning_3
			}
			add = {
				value = 20
				desc = court_position_education_learning_3_trait
			}
		}

		add = court_position_aptitude_family_business_value
		add = court_position_aptitude_low_penalty_value
	}

	# Is this an available position for this court? (root is court owner)
	is_shown = {
		has_religion = religion:roman_religion
	}
	
	is_shown_character = {
		scope:employee = {
			is_imprisoned = no
		}
	}

	valid_character = {
		scope:employee = {
			has_religion = religion:roman_religion
			AND = {
				OR = {
					has_trait = education_learning_1
					has_trait = education_learning_2
					has_trait = education_learning_3
					has_trait = mystic_2
					has_trait = mystic_1
					has_trait = mystic_3
					learning >= 11 
				}
				is_male = yes
				#has_trait = cdr_cmd3_religion
			}
		}
	}
	


	valid_character = {
	}

	revoke_cost = {
		prestige =  {
			value = major_court_position_prestige_revoke_cost
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = pr_court_flamen_pomona_court_position
					any_court_position_holder = {
				        type = pr_court_flamen_pomona_court_position
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
		}
	}

	salary = {
		gold = {
			value = court_position_physician_salary
			#value = minor_court_position_salary
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					scope:liege = {
						exists = dynasty
						dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

						employs_court_position = pr_court_flamen_pomona_court_position
						any_court_position_holder = {
					        type = pr_court_flamen_pomona_court_position
							exists = dynasty
							house = prev.house
						}
					}
				}
				multiply = {
					value = 0.0
					desc = inner_circle_salary_mod
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
		}
		round = no
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		aptitude_level_1 = {
			monthly_piety_gain_mult = 0.02
		}
		aptitude_level_2 = {
			monthly_piety_gain_mult = 0.04
		}
		aptitude_level_3 = {
			monthly_piety_gain_mult = 0.06
		}
		aptitude_level_4 = {
			monthly_piety_gain_mult = 0.08
		}
		aptitude_level_5 = {
			monthly_piety_gain_mult = 0.1
		}
	}

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
		learning = 1
	}

	#custom_employee_modifier_description = court_physician_employee_custom_effect_description

	on_court_position_received = {
		#court_physician_title_accepted_effect = yes
		court_flamen_pomona_title_accepted_effect = yes 
	}
	on_court_position_revoked = { 
		#court_physician_title_revoked_effect = yes
		court_flamen_pomona_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		#court_physician_title_invalidated_effect = yes
		court_flamen_pomona_title_invalidated_effect = yes
	}

	
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
        value = 150
        add = scope:base_value
        add = court_position_candidate_score_base_value
        add = court_position_candidate_aptitude_value
		# No debt considerations for Physicians, they are too important
        # AI is less likely to fire the court physician, unless they have a better candidate.
        if = {
            limit = {
                exists = scope:firing_court_position
            }
            add = 200
            scope:employee = {
                # Does the liege have a better candidate that they should be hiring instead?
                if = {
                    limit = {
                        scope:highest_available_aptitude > scope:employee_aptitude
                    }
                    add = -150
                }
            }
        }
    }
}

pr_court_flamen_portunus_court_position = {
	max_available_positions = 1
	#category = court_position_category_common
	category = court_position_category_special

	opinion = {
		value = regular_court_position_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 1
		add = {
			value = learning
			multiply = 1.75
			max = 50
			desc = court_position_skill_learning
		}
		if = {
			limit = {
				has_trait = mystic_3
			}
			add = { 
				value = 20
				desc = court_position_mystic_3_trait
			}
		}
		else_if = {
			limit = {
				has_trait = mystic_2
			}
			add = { 
				value = 10
				desc = court_position_mystic_2_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = mystic_1
			}
			add = { 
				value = 10
				desc = court_position_mystic_1_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = theologian
			}
			add = {
				value = 10
				desc = court_position_theologian_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = education_learning_1
			}
			add = {
				value = 20
				desc = court_position_education_learning_1_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = education_learning_2
			}
			add = {
				value = 20
				desc = court_position_education_learning_2_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = education_learning_3
			}
			add = {
				value = 20
				desc = court_position_education_learning_3_trait
			}
		}

		add = court_position_aptitude_family_business_value
		add = court_position_aptitude_low_penalty_value
	}

	# Is this an available position for this court? (root is court owner)
	is_shown = {
		has_religion = religion:roman_religion
	}
	
	is_shown_character = {
		scope:employee = {
			is_imprisoned = no
		}
	}

	valid_character = {
		scope:employee = {
			has_religion = religion:roman_religion
			AND = {
				OR = {
					has_trait = education_learning_1
					has_trait = education_learning_2
					has_trait = education_learning_3
					has_trait = mystic_2
					has_trait = mystic_1
					has_trait = mystic_3
					learning >= 11 
				}
				is_male = yes
			}
		}
	}
	


	valid_character = {
	}

	revoke_cost = {
		prestige =  {
			value = major_court_position_prestige_revoke_cost
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = pr_court_flamen_portunus_court_position
					any_court_position_holder = {
				        type = pr_court_flamen_portunus_court_position
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
		}
	}

	salary = {
		gold = {
			value = court_position_physician_salary
			#value = minor_court_position_salary
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					scope:liege = {
						exists = dynasty
						dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

						employs_court_position = pr_court_flamen_portunus_court_position
						any_court_position_holder = {
					        type = pr_court_flamen_portunus_court_position
							exists = dynasty
							house = prev.house
						}
					}
				}
				multiply = {
					value = 0.0
					desc = inner_circle_salary_mod
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
		}
		round = no
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		aptitude_level_1 = {
			monthly_piety_gain_mult = 0.02
		}
		aptitude_level_2 = {
			monthly_piety_gain_mult = 0.04
		}
		aptitude_level_3 = {
			monthly_piety_gain_mult = 0.06
		}
		aptitude_level_4 = {
			monthly_piety_gain_mult = 0.08
		}
		aptitude_level_5 = {
			monthly_piety_gain_mult = 0.1
		}
	}

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
		learning = 1
	}

	#custom_employee_modifier_description = court_physician_employee_custom_effect_description

	on_court_position_received = {
		#court_physician_title_accepted_effect = yes
		court_flamen_portunus_title_accepted_effect = yes 
	}
	on_court_position_revoked = { 
		#court_physician_title_revoked_effect = yes
		court_flamen_portunus_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		#court_physician_title_invalidated_effect = yes
		court_flamen_portunus_title_invalidated_effect = yes
	}

	
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
        value = 150
        add = scope:base_value
        add = court_position_candidate_score_base_value
        add = court_position_candidate_aptitude_value
		# No debt considerations for Physicians, they are too important
        # AI is less likely to fire the court physician, unless they have a better candidate.
        if = {
            limit = {
                exists = scope:firing_court_position
            }
            add = 200
            scope:employee = {
                # Does the liege have a better candidate that they should be hiring instead?
                if = {
                    limit = {
                        scope:highest_available_aptitude > scope:employee_aptitude
                    }
                    add = -150
                }
            }
        }
    }
}

pr_court_flamen_vulcan_court_position = {
	max_available_positions = 1
	#category = court_position_category_common
	category = court_position_category_special

	opinion = {
		value = regular_court_position_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 1
		add = {
			value = learning
			multiply = 1.75
			max = 50
			desc = court_position_skill_learning
		}
		if = {
			limit = {
				has_trait = mystic_3
			}
			add = { 
				value = 20
				desc = court_position_mystic_3_trait
			}
		}
		else_if = {
			limit = {
				has_trait = mystic_2
			}
			add = { 
				value = 10
				desc = court_position_mystic_2_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = mystic_1
			}
			add = { 
				value = 10
				desc = court_position_mystic_1_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = theologian
			}
			add = {
				value = 10
				desc = court_position_theologian_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = education_learning_1
			}
			add = {
				value = 20
				desc = court_position_education_learning_1_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = education_learning_2
			}
			add = {
				value = 20
				desc = court_position_education_learning_2_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = education_learning_3
			}
			add = {
				value = 20
				desc = court_position_education_learning_3_trait
			}
		}

		add = court_position_aptitude_family_business_value
		add = court_position_aptitude_low_penalty_value
	}

	# Is this an available position for this court? (root is court owner)
	is_shown = {
		has_religion = religion:roman_religion
	}
	
	is_shown_character = {
		scope:employee = {
			is_imprisoned = no
		}
	}

	valid_character = {
		scope:employee = {
			has_religion = religion:roman_religion
			AND = {
				OR = {
					has_trait = education_learning_1
					has_trait = education_learning_2
					has_trait = education_learning_3
					has_trait = mystic_2
					has_trait = mystic_1
					has_trait = mystic_3
					learning >= 11 
				}
				is_male = yes
			}
		}
	}
	


	valid_character = {
	}

	revoke_cost = {
		prestige =  {
			value = major_court_position_prestige_revoke_cost
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = pr_court_flamen_vulcan_court_position
					any_court_position_holder = {
				        type = pr_court_flamen_vulcan_court_position
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
		}
	}

	salary = {
		gold = {
			value = court_position_physician_salary
			#value = minor_court_position_salary
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					scope:liege = {
						exists = dynasty
						dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

						employs_court_position = pr_court_flamen_vulcan_court_position
						any_court_position_holder = {
					        type = pr_court_flamen_vulcan_court_position
							exists = dynasty
							house = prev.house
						}
					}
				}
				multiply = {
					value = 0.0
					desc = inner_circle_salary_mod
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
		}
		round = no
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		aptitude_level_1 = {
			monthly_piety_gain_mult = 0.02
		}
		aptitude_level_2 = {
			monthly_piety_gain_mult = 0.04
		}
		aptitude_level_3 = {
			monthly_piety_gain_mult = 0.06
		}
		aptitude_level_4 = {
			monthly_piety_gain_mult = 0.08
		}
		aptitude_level_5 = {
			monthly_piety_gain_mult = 0.1
		}
	}

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
		learning = 1
	}

	#custom_employee_modifier_description = court_physician_employee_custom_effect_description

	on_court_position_received = {
		#court_physician_title_accepted_effect = yes
		court_flamen_vulcan_title_accepted_effect = yes 
	}
	on_court_position_revoked = { 
		#court_physician_title_revoked_effect = yes
		court_flamen_vulcan_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		#court_physician_title_invalidated_effect = yes
		court_flamen_vulcan_title_invalidated_effect = yes
	}

	
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
        value = 150
        add = scope:base_value
        add = court_position_candidate_score_base_value
        add = court_position_candidate_aptitude_value
		# No debt considerations for Physicians, they are too important
        # AI is less likely to fire the court physician, unless they have a better candidate.
        if = {
            limit = {
                exists = scope:firing_court_position
            }
            add = 200
            scope:employee = {
                # Does the liege have a better candidate that they should be hiring instead?
                if = {
                    limit = {
                        scope:highest_available_aptitude > scope:employee_aptitude
                    }
                    add = -150
                }
            }
        }
    }
}

pr_court_flamen_volturnus_court_position = {
	max_available_positions = 1
	#category = court_position_category_common
	category = court_position_category_special

	opinion = {
		value = regular_court_position_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 1
		add = {
			value = learning
			multiply = 1.75
			max = 50
			desc = court_position_skill_learning
		}
		if = {
			limit = {
				has_trait = mystic_3
			}
			add = { 
				value = 20
				desc = court_position_mystic_3_trait
			}
		}
		else_if = {
			limit = {
				has_trait = mystic_2
			}
			add = { 
				value = 10
				desc = court_position_mystic_2_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = mystic_1
			}
			add = { 
				value = 10
				desc = court_position_mystic_1_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = theologian
			}
			add = {
				value = 10
				desc = court_position_theologian_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = education_learning_1
			}
			add = {
				value = 20
				desc = court_position_education_learning_1_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = education_learning_2
			}
			add = {
				value = 20
				desc = court_position_education_learning_2_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = education_learning_3
			}
			add = {
				value = 20
				desc = court_position_education_learning_3_trait
			}
		}

		add = court_position_aptitude_family_business_value
		add = court_position_aptitude_low_penalty_value
	}

	# Is this an available position for this court? (root is court owner)
	is_shown = {
		has_religion = religion:roman_religion
	}
	
	is_shown_character = {
		scope:employee = {
			is_imprisoned = no
		}
	}

	valid_character = {
		scope:employee = {
			has_religion = religion:roman_religion
			AND = {
				OR = {
					has_trait = education_learning_1
					has_trait = education_learning_2
					has_trait = education_learning_3
					has_trait = mystic_2
					has_trait = mystic_1
					has_trait = mystic_3
					learning >= 11 
				}
				is_male = yes
			}
		}
	}
	


	valid_character = {
	}

	revoke_cost = {
		prestige =  {
			value = major_court_position_prestige_revoke_cost
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = pr_court_flamen_volturnus_court_position
					any_court_position_holder = {
				        type = pr_court_flamen_volturnus_court_position
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
		}
	}

	salary = {
		gold = {
			value = court_position_physician_salary
			#value = minor_court_position_salary
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					scope:liege = {
						exists = dynasty
						dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

						employs_court_position = pr_court_flamen_volturnus_court_position
						any_court_position_holder = {
					        type = pr_court_flamen_volturnus_court_position
							exists = dynasty
							house = prev.house
						}
					}
				}
				multiply = {
					value = 0.0
					desc = inner_circle_salary_mod
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
		}
		round = no
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		aptitude_level_1 = {
			monthly_piety_gain_mult = 0.02
		}
		aptitude_level_2 = {
			monthly_piety_gain_mult = 0.04
		}
		aptitude_level_3 = {
			monthly_piety_gain_mult = 0.06
		}
		aptitude_level_4 = {
			monthly_piety_gain_mult = 0.08
		}
		aptitude_level_5 = {
			monthly_piety_gain_mult = 0.1
		}
	}

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
		learning = 1
	}

	#custom_employee_modifier_description = court_physician_employee_custom_effect_description

	on_court_position_received = {
		#court_physician_title_accepted_effect = yes
		court_flamen_volturnus_title_accepted_effect = yes 
	}
	on_court_position_revoked = { 
		#court_physician_title_revoked_effect = yes
		court_flamen_volturnus_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		#court_physician_title_invalidated_effect = yes
		court_flamen_volturnus_title_invalidated_effect = yes
	}

	
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
        value = 150
        add = scope:base_value
        add = court_position_candidate_score_base_value
        add = court_position_candidate_aptitude_value
		# No debt considerations for Physicians, they are too important
        # AI is less likely to fire the court physician, unless they have a better candidate.
        if = {
            limit = {
                exists = scope:firing_court_position
            }
            add = 200
            scope:employee = {
                # Does the liege have a better candidate that they should be hiring instead?
                if = {
                    limit = {
                        scope:highest_available_aptitude > scope:employee_aptitude
                    }
                    add = -150
                }
            }
        }
    }
}

pr_court_pater_mithras_court_position = {
	max_available_positions = 1
	category = court_position_category_common
	#category = court_position_category_special

	opinion = {
		value = regular_court_position_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 1
		add = {
			value = martial
			multiply = 2.5
			max = 50
			desc = court_position_skill_martial
		}
		if = {
			limit = {
				has_trait = blademaster_3
			}
			add = { 
				value = 30
				desc = court_position_blademaster_3_trait
			}
		}
		else_if = {
			limit = {
				has_trait = blademaster_2
			}
			add = { 
				value = 15
			}
		}
		else_if = {
			limit = { 
				has_trait = mystic_1
			}
			add = { 
				value = 10
				desc = court_position_mystic_1_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = blademaster_1
			}
			add = {
				value = 5
				desc = court_position_blademaster_1_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = theologian
			}
			add = {
				value = 10
				desc = court_position_theologian_trait
			}
		}

		add = court_position_aptitude_family_business_value
		add = court_position_aptitude_high_penalty_value
	}

	# Is this an available position for this court? (root is court owner)
	is_shown = {
		OR = {
			has_religion = religion:roman_religion
			faith = faith:hellenic_pagan
		}
	}
	
	is_shown_character = {
		scope:employee = {
			is_imprisoned = no
		}
	}

	valid_character = {
		scope:employee = {
			AND = {
				OR = {
					has_religion = religion:roman_religion
					faith = faith:hellenic_pagan
				}
				has_trait = pr_pater_mithras
				is_male = yes
			}
		}
	}
	


	valid_character = {
	}

	revoke_cost = {
		prestige =  {
			value = major_court_position_prestige_revoke_cost
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = pr_court_pater_mithras_court_position
					any_court_position_holder = {
				        type = pr_court_pater_mithras_court_position
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
		}
	}

	salary = {
		gold = {
			value = court_position_physician_salary
			#value = minor_court_position_salary
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					scope:liege = {
						exists = dynasty
						dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

						employs_court_position = pr_court_pater_mithras_court_position
						any_court_position_holder = {
					        type = pr_court_pater_mithras_court_position
							exists = dynasty
							house = prev.house
						}
					}
				}
				multiply = {
					value = 0.0
					desc = inner_circle_salary_mod
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
		}
		round = no
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		aptitude_level_1 = {
			monthly_piety_gain_mult = 0.02
		}
		aptitude_level_2 = {
			monthly_piety_gain_mult = 0.04
		}
		aptitude_level_3 = {
			monthly_piety_gain_mult = 0.06
		}
		aptitude_level_4 = {
			monthly_piety_gain_mult = 0.08
		}
		aptitude_level_5 = {
			monthly_piety_gain_mult = 0.1
		}
	}

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
		learning = 1
	}

	#custom_employee_modifier_description = court_physician_employee_custom_effect_description

	on_court_position_received = {
		#court_physician_title_accepted_effect = yes
		court_pater_mithras_title_accepted_effect = yes 
	}
	on_court_position_revoked = { 
		#court_physician_title_revoked_effect = yes
		court_pater_mithras_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		#court_physician_title_invalidated_effect = yes
		court_pater_mithras_title_invalidated_effect = yes
	}

	
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
        value = 150
        add = scope:base_value
        add = court_position_candidate_score_base_value
        add = court_position_candidate_aptitude_value
		# No debt considerations for Physicians, they are too important
        # AI is less likely to fire the court physician, unless they have a better candidate.
        if = {
            limit = {
                exists = scope:firing_court_position
            }
            add = 200
            scope:employee = {
                # Does the liege have a better candidate that they should be hiring instead?
                if = {
                    limit = {
                        scope:highest_available_aptitude > scope:employee_aptitude
                    }
                    add = -150
                }
            }
        }
    }
}